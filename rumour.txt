**Setup**
Initates the simulation based on the variable attributes.
If you want to run the simulation with other attributes this is where
you make changes.
---------------------------------------------
- int noOX 
- int noOY 
- int time 
- int probAgent 
- int probEvent 
- int noOAgentSteps 
- int noOQuerySteps 
- int queryTime
.............................................
enironment.run():void
=============================================

**Environment**
Checks Setup attributes.
Generates the network with nodes. Makes time tick.
---------------------------------------------
+ Environment (int noOX, int noOY, int time, int probAgent, int probEvent, int noOAgentSteps, int noOQuerySteps, int queryTime)
- setQueryNode(Node node):void
+ run():void
+ getEventID():int
+ newQueryID():int
============================================= 

**Node**
Discovers events, sends messages through the network. It knows it's coordinates and where
its neighbours are. It knows if it's busy or not and checks if neighbour is busy when they want
to send a message.
---------------------------------------------
+State:boolean
#position:Position
.............................................
+Node(int x, int y, int probAgent, int probEvent, int noOAgentSteps
+getposition():Position
+getState():State
+addNeighbour(Node node):void
+getNeighbour(Position p):Node
+getNeighbour(Direction d):Node
+generateEvent(int iD, int time):void
+detectEvent:boolean
+sendTraveler():void
+addToQueue(Message message):void
+toString():String
=============================================

**QueryNode**
Extends Node. Generates and handles queries.
---------------------------------------------
+QueryNode(int x, int y, int probAgent, int probEvent, int noOAgentSteps, int noOQuerySteps)
+generateQuery(int iD, int remindTime):void
+isremind():boolean
+isQueryBack():void
=============================================

**Message**
Knows direction, knows how far it has traveled and how far it can go.
---------------------------------------------
+Message(int maxNoOSteps, enum direction)
+increment():void
+getDirection():void
+setDirection(Direction newDirection):
+isDone():boolean
+toString():String
=============================================

**Agent**
Extends Message. Spreads information about events, travels through the network and leaves information
in the nodes it passes.
---------------------------------------------
+Agent(HashTable, int maxNoOSteps)
+addToHash(HashTable):void
+getToHash(HashTable:void
=============================================

**Query**
Extends Message. Knows an event ID it wants to find and travels the network looking for it.
---------------------------------------------
+State:boolean
.............................................
+Query(int iD, int maxNoOSteps)
+addPos(Position P):void
+setState(boolean state):void
+getState():int
+getID():int
+setEvent(int iD, int time, Position p)
+getEvent():Event
=============================================

**Position**
Knows coordinates.
---------------------------------------------
+Position(int x, int y)
+getX():int
+getY():int
+toString(String s):String
=============================================

**Route**
Knows the direction and distance to an event.
---------------------------------------------
+Route(int distance, int direction)
+getDistance():int
+getDirection():int
+setDistance(int distance):void
+setDirection(Direction direction):void
=============================================

/////////////////////////////////////////////
Setup <>---> Environment
Environment <>---> QueryNode
Environment <>---> Node
QueryNode <>---> Node
Node <>---> Position
Node <>---> Route
Node <>---> Message
Node <>---> Event
Agent <>---> Route
Agent -----> Message
Query -----> Message
Query <>---> Position
/////////////////////////////////////////////*
